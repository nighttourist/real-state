/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Color;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author Asus
 */
public class property extends javax.swing.JFrame {

    /**
     * Creates new form property
     */
      p_type type=new p_type();
      HashMap<String,Integer>map=type.getTypesMap();
    public property() {
        initComponents();
         Border titleBorder=BorderFactory.createMatteBorder(0, 0, 3, 0,new Color(26,138,32
         ));
        titlepanel.setBorder(titleBorder);
        Border buttonBorder=BorderFactory.createMatteBorder(3, 3, 3, 3,new Color(255,255,255));
        txtadd.setBorder(buttonBorder);
        txtremove.setBorder(buttonBorder);
        txtedit.setBorder(buttonBorder);
        txtsearch.setBorder(buttonBorder);
        txtshowproperty.setBorder(buttonBorder);
        bindcombo();
    }

    public void bindcombo(){
      for(String s:map.keySet()){
         txtcombo.addItem(s);
      }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titlepanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        txtadd = new javax.swing.JButton();
        txtremove = new javax.swing.JButton();
        txtedit = new javax.swing.JButton();
        txtownerid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtfeet = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JButton();
        txtcombo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtbed = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        txtbath = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        txtage = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdescription = new javax.swing.JTextArea();
        txtbal = new javax.swing.JCheckBox();
        txtpool = new javax.swing.JCheckBox();
        txtgarage = new javax.swing.JCheckBox();
        txtbacky = new javax.swing.JCheckBox();
        txtlift = new javax.swing.JCheckBox();
        txtshowproperty = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(75, 192, 18));

        titlepanel.setBackground(new java.awt.Color(65, 160, 10));

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Property");

        javax.swing.GroupLayout titlepanelLayout = new javax.swing.GroupLayout(titlepanel);
        titlepanel.setLayout(titlepanelLayout);
        titlepanelLayout.setHorizontalGroup(
            titlepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlepanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(366, 366, 366))
        );
        titlepanelLayout.setVerticalGroup(
            titlepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titlepanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel2.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel3.setText("ID:");

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel4.setText("Type:");

        txtid.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N

        txtaddress.setColumns(20);
        txtaddress.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        txtaddress.setRows(5);
        jScrollPane1.setViewportView(txtaddress);

        txtadd.setBackground(new java.awt.Color(0, 0, 255));
        txtadd.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        txtadd.setForeground(new java.awt.Color(255, 255, 255));
        txtadd.setText("ADD");
        txtadd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddActionPerformed(evt);
            }
        });

        txtremove.setBackground(new java.awt.Color(153, 0, 0));
        txtremove.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        txtremove.setForeground(new java.awt.Color(255, 255, 255));
        txtremove.setText("Removie");
        txtremove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtremoveActionPerformed(evt);
            }
        });

        txtedit.setBackground(new java.awt.Color(0, 204, 0));
        txtedit.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        txtedit.setForeground(new java.awt.Color(255, 255, 255));
        txtedit.setText("Edit");
        txtedit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txteditActionPerformed(evt);
            }
        });

        txtownerid.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        txtownerid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtowneridActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel5.setText("Sqaure feet:");

        txtfeet.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel6.setText("Owner ID:");

        txtprice.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel7.setText("Price:");

        txtsearch.setBackground(new java.awt.Color(51, 51, 51));
        txtsearch.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 11)); // NOI18N
        txtsearch.setForeground(new java.awt.Color(255, 255, 255));
        txtsearch.setText("Search");
        txtsearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        txtcombo.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel8.setText("Bed Room:");

        txtbed.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        txtbed.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel9.setText("bath Room:");

        txtbath.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        txtbath.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel10.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel10.setText("Age of House:");

        txtage.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        txtage.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 8)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 51));
        jLabel11.setText("*0 means brand new");

        jLabel12.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        jLabel12.setText("Descriptions:");

        txtdescription.setColumns(20);
        txtdescription.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 18)); // NOI18N
        txtdescription.setRows(5);
        jScrollPane2.setViewportView(txtdescription);

        txtbal.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        txtbal.setText("Balcone");
        txtbal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbalActionPerformed(evt);
            }
        });

        txtpool.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        txtpool.setText("pool");
        txtpool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpoolActionPerformed(evt);
            }
        });

        txtgarage.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        txtgarage.setText("Garage");
        txtgarage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgarageActionPerformed(evt);
            }
        });

        txtbacky.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        txtbacky.setText("Backyard");
        txtbacky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbackyActionPerformed(evt);
            }
        });

        txtlift.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        txtlift.setText("Lift");
        txtlift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtliftActionPerformed(evt);
            }
        });

        txtshowproperty.setBackground(new java.awt.Color(153, 0, 153));
        txtshowproperty.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        txtshowproperty.setForeground(new java.awt.Color(255, 255, 255));
        txtshowproperty.setText("Show Property");
        txtshowproperty.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtshowproperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtshowpropertyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(txtremove)
                        .addGap(110, 110, 110)
                        .addComponent(txtedit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(txtshowproperty)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfeet, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)
                                        .addComponent(txtsearch))
                                    .addComponent(txtcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtownerid, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtbath, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtbed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(23, 23, 23))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(67, 67, 67)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel12))
                                        .addGap(24, 24, 24)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtgarage, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtpool, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbacky, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtlift, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(116, 116, 116))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(titlepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtfeet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtownerid, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtbal)
                                .addGap(18, 18, 18)
                                .addComponent(txtpool)
                                .addGap(18, 18, 18)
                                .addComponent(txtbacky)
                                .addGap(18, 18, 18)
                                .addComponent(txtgarage)
                                .addGap(18, 18, 18)
                                .addComponent(txtlift)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtbed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(349, 349, 349))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(95, 95, 95)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(txtbath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2)))))
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtedit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtremove, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtshowproperty, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txteditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txteditActionPerformed
 try{
         int id=Integer.valueOf(txtid.getText());
         int type=map.get(txtcombo.getSelectedItem().toString());
         int ownerid=Integer.valueOf(txtownerid.getText());
         int size=Integer.valueOf(txtfeet.getText());
         int bedroom=Integer.valueOf(txtbed.getValue().toString());
         int bathroom=Integer.valueOf(txtbath.getValue().toString());
         int age=Integer.valueOf(txtage.getValue().toString());
         boolean havebalcone=false;
         boolean havepool=false;
         boolean havelift=false;
         boolean havebackyard=false;
         boolean havegarage=false;
         if(txtbal.isSelected()) havebalcone=true;
          if(txtpool.isSelected()) havepool=true;
           if(txtlift.isSelected()) havelift=true;
            if(txtbacky.isSelected()) havebackyard=true;
             if(txtgarage.isSelected()) havegarage=true;
         String price =txtprice.getText();
         String address=txtaddress.getText();
         String description=txtdescription.getText();
         p_property property=new p_property(id,type,size,ownerid,price,address,bedroom,bathroom,age,havebalcone,havepool,havebackyard,havegarage,havelift,description);
         if(new p_property().editproperty(property)){
             
          JOptionPane.showMessageDialog(null, "property New Information added", "Edit property", 1);
//         // filltype();
//          txtid.setText("");
//          txtname.setText("");
//          txtdiscription.setText("");
       }
       else
       {
            JOptionPane.showMessageDialog(null, "property not updated", "Edit Property", 2);
       }
     }
        catch(Exception e)
       {
            JOptionPane.showMessageDialog(null, e.getMessage()+"Error", "Error", 0);
       }
     
          
    }//GEN-LAST:event_txteditActionPerformed

    private void txtremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtremoveActionPerformed
        // TODO add your handling code here:
   try{
            int Id=Integer.valueOf(txtid.getText());
            int yes_no=JOptionPane.showConfirmDialog(null, "Do You Want to Delete This Property", "Delete property", JOptionPane.YES_NO_OPTION);
            p_property property=new p_property();
            if(txtid.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null,"Fill out correct client","Empty client Id", 2);
            }
            else{

                if(yes_no==JOptionPane.YES_OPTION)
                {
                    if(property.removeproperty(Id))
                    {
                        JOptionPane.showMessageDialog(null, "Delete property Sucessfully ", "Delete property", 1);
                        //  filltablebyower();
                        txtbal.setSelected(false);
             txtbacky.setSelected(false);
             txtpool.setSelected(false);
             txtgarage.setSelected(false);
             txtlift.setSelected(false);
             txtaddress.setText("");
             txtprice.setText("");
             txtdescription.setText("");
             txtfeet.setText("");
             txtownerid.setText("");
             txtid.setText("");
             txtbed.setValue(0);
             txtbath.setValue(0);
             txtage.setValue(0);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Invalid property ", "Delete property", 2);
                    }
                }
            }
        }
        catch(Exception e)

        {
            JOptionPane.showMessageDialog(null, e.getMessage()+"Enter the property Id", "Emty property", 0);
        }
       
       
    }//GEN-LAST:event_txtremoveActionPerformed

    private void txtaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddActionPerformed
     try{
         int type=map.get(txtcombo.getSelectedItem().toString());
         int ownerid=Integer.valueOf(txtownerid.getText());
         int size=Integer.valueOf(txtfeet.getText());
         int bedroom=Integer.valueOf(txtbed.getValue().toString());
         int bathroom=Integer.valueOf(txtbath.getValue().toString());
         int age=Integer.valueOf(txtage.getValue().toString());
         
         boolean havebalcone=false;
         boolean havepool=false;
         boolean havelift=false;
         boolean havebackyard=false;
         boolean havegarage=false;
         
         if(txtbal.isSelected()) havebalcone=true;
         if(txtpool.isSelected()) havepool=true;
         if(txtlift.isSelected()) havelift=true;
         if(txtbacky.isSelected()) havebackyard=true;
         if(txtgarage.isSelected()) havegarage=true;
         
         String price =txtprice.getText();
         String address=txtaddress.getText();
         String description=txtdescription.getText();
         
         p_property property=new p_property(0,type,size,ownerid,price,address,bedroom,bathroom,age,havebalcone,havepool,havebackyard,havegarage,havelift,description);
        
         if(new p_property().addnewproperty(property)){
             JOptionPane.showMessageDialog(null, "New property added", "Add property", 1);
             txtbal.setSelected(false);
             txtbacky.setSelected(false);
             txtpool.setSelected(false);
             txtgarage.setSelected(false);
             txtlift.setSelected(false);
             txtaddress.setText("");
             txtprice.setText("");
             txtdescription.setText("");
             txtfeet.setText("");
             txtownerid.setText("");
             txtbed.setValue(0);
             txtbath.setValue(0);
             txtage.setValue(0);
       }
       else
       {
            JOptionPane.showMessageDialog(null, "invalid operation", "Add Property", 2);
       }
     }
        catch(Exception e)
       {
            JOptionPane.showMessageDialog(null, e.getMessage()+"Error", "Error", 0);
       }
        
      
    }//GEN-LAST:event_txtaddActionPerformed

    private void txtbalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbalActionPerformed

    private void txtpoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpoolActionPerformed

    private void txtgarageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgarageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgarageActionPerformed

    private void txtbackyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbackyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbackyActionPerformed

    private void txtliftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtliftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtliftActionPerformed

    private void txtshowpropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtshowpropertyActionPerformed
        // TODO add your handling code here:
                    show_property showpropertyapp=new show_property();
                    showpropertyapp.setVisible(true);
                    showpropertyapp.pack();
                    showpropertyapp.setLocationRelativeTo(null);
                    showpropertyapp.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_txtshowpropertyActionPerformed

    private void txtowneridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtowneridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtowneridActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        
        
        try{
             txtbal.setSelected(false);
             txtbacky.setSelected(false);
             txtpool.setSelected(false);
             txtgarage.setSelected(false);
             txtlift.setSelected(false);
             txtaddress.setText("");
             txtprice.setText("");
             txtdescription.setText("");
             txtfeet.setText("");
             txtownerid.setText("");
             txtbed.setValue(0);
             txtbath.setValue(0);
             txtage.setValue(0);
             

             
           int id=Integer.valueOf(txtid.getText());
           p_property property=new p_property().findproperty(id);
           if(property!=null){
               txtaddress.setText(property.getAddress());
               txtdescription.setText(property.getDescription());
               txtprice.setText(property.getPrice());
               txtfeet.setText(String.valueOf(property.getSize()));
               txtownerid.setText(String.valueOf(property.getOwnerid()));
               //txtcombo.setSelectedItem(map.get(property.getType()));
               for(Object type:map.keySet()){
                   if(map.get(type).equals(property.getType()))
                       txtcombo.setSelectedItem(type);
               }
               txtbed.setValue(property.getBedroom());
               txtbath.setValue(property.getBathroom()); 
               txtage.setValue(property.getAge());
               if(property.isBalcone())txtbal.setSelected(true);
               if(property.isBackyard())txtbacky.setSelected(true);
               if(property.isGarage())txtgarage.setSelected(true);
               if(property.isLift())txtlift.setSelected(true);
               if(property.isPool())txtpool.setSelected(true);
               
           }
           else{
               JOptionPane.showMessageDialog(null, "Property Not Found", "Error Case", 0);
               txtid.setText("");
           }
        }
        catch(Exception e)
       {
            JOptionPane.showMessageDialog(null, e.getMessage()+"Error", "Error", 0);
       }
    }//GEN-LAST:event_txtsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new property().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel titlepanel;
    private javax.swing.JButton txtadd;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JSpinner txtage;
    private javax.swing.JCheckBox txtbacky;
    private javax.swing.JCheckBox txtbal;
    private javax.swing.JSpinner txtbath;
    private javax.swing.JSpinner txtbed;
    private javax.swing.JComboBox<String> txtcombo;
    private javax.swing.JTextArea txtdescription;
    private javax.swing.JButton txtedit;
    private javax.swing.JTextField txtfeet;
    private javax.swing.JCheckBox txtgarage;
    private javax.swing.JTextField txtid;
    private javax.swing.JCheckBox txtlift;
    private javax.swing.JTextField txtownerid;
    private javax.swing.JCheckBox txtpool;
    private javax.swing.JTextField txtprice;
    private javax.swing.JButton txtremove;
    private javax.swing.JButton txtsearch;
    private javax.swing.JButton txtshowproperty;
    // End of variables declaration//GEN-END:variables
}
